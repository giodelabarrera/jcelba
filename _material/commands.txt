sublime text

package symfony
https://github.com/raulfraile/sublime-symfony2



# Agregar bundle e instalar 

sudo composer require friendsofsymfony/user-bundle "~2.0@dev"


# Elimina ficheros log y cache

rm -R app/logs/* app/cache/*; 


# Limpiar cache local dev

-- Ubuntu
sudo chmod -R 777 app/cache/ app/logs/; sudo chown -R $user:www-data app/cache/ app/logs/; sudo php app/console cache:clear; sudo chmod -R 777 app/cache/ app/logs/; sudo chown -R $user:www-data app/cache/ app/logs/

-- MacOS X
sudo chmod -R 777 app/cache/ app/logs/; sudo chown -R giorgio:_www app/cache/ app/logs/; sudo php app/console cache:clear; sudo chmod -R 777 app/cache/ app/logs/; sudo chown -R giorgio:_www app/cache/ app/logs/

# Limpiar cache local prod

sudo chmod -R 777 app/cache/; sudo chmod -R 777 app/logs/; sudo chown -R $user:www-data app/cache/; sudo chown -R $user:www-data app/logs/; sudo php app/console cache:clear --env=prod; sudo chmod -R 777 app/cache/; sudo chmod -R 777 app/logs/; sudo chown -R $user:www-data app/cache/; sudo chown -R $user:www-data app/logs/

-- MacOS X
sudo chmod -R 777 app/cache/ app/logs/; sudo chown -R giorgio:_www app/cache/ app/logs/; sudo php app/console cache:clear --env=prod; sudo chmod -R 777 app/cache/ app/logs/; sudo chown -R giorgio:_www app/cache/ app/logs/


# Limpiar cache dev

sudo chmod -R 777 app/cache/ app/logs/; sudo chown -R foxize:psacln app/cache/ app/logs/; sudo php -d memory_limit=256M app/console cache:clear; sudo chmod -R 777 app/cache/ app/logs/; sudo chown -R foxize:psacln app/cache/ app/logs/


# Limpiar cache prod

sudo chmod -R 777 app/cache/ app/logs/; sudo chown -R foxize:psacln app/cache/ app/logs/; sudo php -d memory_limit=256M app/console cache:clear --env=prod; sudo chmod -R 777 app/cache/ app/logs/; sudo chown -R foxize:psacln app/cache/ app/logs/


# Dar permisos directorio web

sudo chown -R foxize:psacln web/


# Assets

php app/console assets:install --symlink


# Assetic para producción

php app/console assetic:dump


# Generar getters, setters de solo una entidad de un bundle. Ej: MenuItem del bundle OttAdminBundle

php app/console generate:doctrine:entities <BUNDLE>:<CLASS>


# Todo en 1, producción

php app/console assets:install --symlink; php app/console assetic:dump; php app/console cache:clear; php app/console cache:clear --env=prod


# Actualizar Schema Base de Datos Doctrine

php app/console doctrine:schema:update --dump-sql  # muestra los cambios a realizar
php app/console doctrine:schema:update --force     # ejecuta los cambios de doctrine en la base de datos


# Generar ficheros desde tablas para importacion a clases php

php app/console doctrine:mapping:import AdminBundle yml


# Cargar clases php para tablas desde ficheros

php app/console doctrine:mapping:convert annotation ./src

php app/console doctrine:mapping:convert annotation ./src --filter=Configuracion
-- AdminUser.orm.yml no debe tener definidos la clave "fields"


# Generar getters, setters de solo una entidad de un bundle. Ej: MenuItem del bundle OttAdminBundle

php app/console doctrine:generate:entities AdminBundle:Configuracion


# Generar crud en modo no interaccion

php app/console generate:doctrine:crud --entity=AdminBundle:Configuracion --format=yml --route-prefix=/admin/configuracion --with-write --overwrite --no-interaction
-- Nos dara un error. Agregar ruta que devuelve y ponerlo en src/AdminBundle/Resources/config/routing.yml
-- De la ruta eliminar "admin_" de admin_admin_configuracion
-- De la ruta eliminar del path "/admin" de /admin/configuracion quedando solo en /configuracion
-- Mover el directorio de plantilla que se habra generado en app/Resources/views. Por ejemplo "app/Resources/views/configuracion" mover a "app/Resources/views/admin"